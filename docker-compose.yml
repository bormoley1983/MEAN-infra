services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - ./infra/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - mean-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5      

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      # - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_CONN_STR=mongodb://mongodb:27017/mean_demo
      - JWT_KEY=secret_passspharse
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ./backend/images:/app/images
    networks:
      - mean-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      # - "4200:4200"
    networks:
      - mean-network
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/images:/usr/share/nginx/html/images:ro
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - mean-network

volumes:
  mongodb_data:

networks:
  mean-network:
    driver: bridge      